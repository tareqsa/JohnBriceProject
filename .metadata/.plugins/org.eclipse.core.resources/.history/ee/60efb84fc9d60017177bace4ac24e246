package conPool;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class ConnectionPool 
{

	private static ConnectionPool INSTANCE ;

	private static final int MAX_CONNECTIONS = 5;
	private final String driver = "com.mysql.jdbc.Driver";
	private final String url = "jdbc:mysql://localhost:3306/jbproject?useSSL=false";
	private final String username = "root";
	private final String password = "Tareq17finish";
	private Set<Connection> allConnections;
	private boolean systemIsNotWorking = false;

	private Object obj = new Object();


	public static ConnectionPool getInstance()
	{
		if(INSTANCE == null)
		{
			INSTANCE = 	new ConnectionPool();
		}
		return INSTANCE;
	}

	private ConnectionPool() 
	{

		try 
		{
			Class.forName(driver);

		} catch (Exception e) 
		{
			// TODO: handle exception
		}
		allConnections = new HashSet<>();

		while(allConnections.size() < MAX_CONNECTIONS)
		{
			try 
			{
				allConnections.add(DriverManager.getConnection(url, username, password));

			} catch (Exception e) 
			{
				// TODO: handle exception
			}

		}
	}	
	public synchronized Connection getConnection()
	{
		Connection con = null;
		synchronized (obj) 
		{
			while(allConnections.isEmpty())
			{
				try 
				{
					obj.wait();

				} catch (InterruptedException e) 
				{
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}
			if(systemIsNotWorking == false)
			{
				con = allConnections.iterator().next();
				allConnections.remove(con);		
			}
		}
		if(con == null)
		{
			throw new NullPointerException();

		}
		else 
			return con;

	}
	public void returnConnection(Connection conn)
	{
		synchronized (obj)
		{
			allConnections.add(conn);
			obj.notifyAll();
		}

	} 
	public void closeAllConnection()
	{
		systemIsNotWorking = true;
		Iterator<Connection> conIt = allConnections.iterator();
		
		while(conIt.hasNext())
		{
			try 
			{
				conIt.next().close();
				
			} catch (SQLException e) 
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}

	}
	public void shuttingDown()
	{
		this.systemIsNotWorking = true;
	}


}
